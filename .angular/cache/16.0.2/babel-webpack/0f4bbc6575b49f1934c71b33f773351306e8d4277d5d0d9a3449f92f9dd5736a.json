{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass PostService {\n  constructor() {\n    this.posts = [];\n  }\n  getPosts() {\n    return [...this.posts]; // To pass the object not by reference, creates a new array with the prev objects\n  }\n\n  addPost(title, content) {\n    const post = {\n      title: title,\n      content: content\n    };\n    this.posts.push(post);\n  }\n}\nPostService.ɵfac = function PostService_Factory(t) {\n  return new (t || PostService)();\n};\nPostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostService,\n  factory: PostService.ɵfac,\n  providedIn: 'root'\n});\nexport { PostService };","map":{"version":3,"names":["PostService","constructor","posts","getPosts","addPost","title","content","post","push","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Saurab Dhir\\Documents\\Web Dev Udemy Course\\Angular Course\\mean-course\\src\\app\\posts\\posts.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\n\r\nimport { Post } from \"./post.model\";\r\n\r\n@Injectable({providedIn:'root'})\r\n\r\nexport class PostService {\r\n  private posts: Post[] = [];\r\n\r\n  getPosts(){\r\n\r\n    return [...this.posts];   // To pass the object not by reference, creates a new array with the prev objects\r\n  }\r\n\r\n  addPost(title: string, content: string) {\r\n     const post: Post = {title: title, content: content}\r\n     this.posts.push(post);\r\n  }\r\n}\r\n"],"mappings":";AAIA,MAEaA,WAAW;EAFxBC,YAAA;IAGU,KAAAC,KAAK,GAAW,EAAE;;EAE1BC,QAAQA,CAAA;IAEN,OAAO,CAAC,GAAG,IAAI,CAACD,KAAK,CAAC,CAAC,CAAG;EAC5B;;EAEAE,OAAOA,CAACC,KAAa,EAAEC,OAAe;IACnC,MAAMC,IAAI,GAAS;MAACF,KAAK,EAAEA,KAAK;MAAEC,OAAO,EAAEA;IAAO,CAAC;IACnD,IAAI,CAACJ,KAAK,CAACM,IAAI,CAACD,IAAI,CAAC;EACxB;;AAXWP,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAS,OAAA,EAAXT,WAAW,CAAAU,IAAA;EAAAC,UAAA,EAFA;AAAM;SAEjBX,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}