{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/button\";\nfunction PostCreateComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please Enter The Post Title\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass PostCreateComponent {\n  constructor() {\n    this.enteredTitle = '';\n    this.enteredContent = '';\n    this.postCreated = new EventEmitter();\n  }\n  onAddPost(form) {\n    if (form.invalid) {\n      return;\n    }\n    const post = {\n      title: form.value.title,\n      content: form.value.content\n    };\n    this.postCreated.emit(post);\n  }\n}\nPostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n  return new (t || PostCreateComponent)();\n};\nPostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostCreateComponent,\n  selectors: [[\"app-post-create\"]],\n  outputs: {\n    postCreated: \"postCreated\"\n  },\n  decls: 12,\n  vars: 1,\n  consts: [[3, \"submit\"], [\"postForm\", \"ngForm\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"title\", \"ngModel\", \"\", \"required\", \"\", \"minLength\", \"3\"], [\"title\", \"ngModel\"], [4, \"ngIf\"], [\"matInput\", \"\", \"rows\", \"6\", \"name\", \"content\", \"ngModel\", \"\", \"required\", \"\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"type\", \"submit\"]],\n  template: function PostCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function PostCreateComponent_Template_form_submit_1_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onAddPost(_r0));\n      });\n      i0.ɵɵelementStart(3, \"mat-form-field\");\n      i0.ɵɵelement(4, \"input\", 2, 3);\n      i0.ɵɵtemplate(6, PostCreateComponent_mat_error_6_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\");\n      i0.ɵɵelement(8, \"textarea\", 5)(9, \"hr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵtext(11, \"Save Post\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.MatInput, i4.MatFormField, i4.MatError, i5.MatCard, i6.MatButton],\n  styles: [\"textarea[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7O0FBRWI7O0FBRUE7RUFDRSxXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZXh0YXJlYSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcblxyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PostCreateComponent };","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PostCreateComponent","constructor","enteredTitle","enteredContent","postCreated","onAddPost","form","invalid","post","title","value","content","emit","selectors","outputs","decls","vars","consts","template","PostCreateComponent_Template","rf","ctx","ɵɵlistener","PostCreateComponent_Template_form_submit_1_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","PostCreateComponent_mat_error_6_Template","ɵɵadvance","ɵɵproperty","_r1"],"sources":["C:\\Users\\Saurab Dhir\\Documents\\Web Dev Udemy Course\\Angular Course\\mean-course\\src\\app\\posts\\post-create\\post-create.component.ts","C:\\Users\\Saurab Dhir\\Documents\\Web Dev Udemy Course\\Angular Course\\mean-course\\src\\app\\posts\\post-create\\post-create.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from \"@angular/core\";\r\nimport { Post } from \"../post.model\";\r\nimport {NgForm} from \"@angular/forms\"\r\n\r\n@Component({\r\n  selector: 'app-post-create',   // helps us to use the component below, this is our own HTML tag\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\n\r\nexport class PostCreateComponent {\r\n  enteredTitle='';\r\n  enteredContent='';\r\n  @Output() postCreated = new EventEmitter<Post>();\r\n\r\n  onAddPost(form: NgForm){                          //form is of type NgForm\r\n    if(form.invalid){\r\n      return\r\n    }\r\n    const post:Post = {                             // post is of type Post (ctr+click to see)\r\n      title: form.value.title,\r\n      content: form.value.content\r\n    };\r\n\r\n    this.postCreated.emit(post);\r\n  }\r\n}\r\n","<mat-card>\r\n\r\n  <form (submit)=\"onAddPost(postForm)\" #postForm=\"ngForm\">\r\n\r\n    <mat-form-field>\r\n      <input matInput type=\"text\" name=\"title\" ngModel required minLength=\"3\" #title=\"ngModel\">\r\n      <mat-error *ngIf=\"title.invalid\">Please Enter The Post Title</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <textarea matInput rows=\"6\" name=\"content\" ngModel required></textarea>\r\n    <hr>\r\n    </mat-form-field>\r\n\r\n    <button color=\"primary\" mat-raised-button type=\"submit\">Save Post</button>\r\n\r\n  </form>\r\n</mat-card>\r\n\r\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;;;;;;;;ICMzDC,EAAA,CAAAC,cAAA,gBAAiC;IAAAD,EAAA,CAAAE,MAAA,kCAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;ADF9E,MAMaC,mBAAmB;EANhCC,YAAA;IAOE,KAAAC,YAAY,GAAC,EAAE;IACf,KAAAC,cAAc,GAAC,EAAE;IACP,KAAAC,WAAW,GAAG,IAAIT,YAAY,EAAQ;;EAEhDU,SAASA,CAACC,IAAY;IACpB,IAAGA,IAAI,CAACC,OAAO,EAAC;MACd;;IAEF,MAAMC,IAAI,GAAQ;MAChBC,KAAK,EAAEH,IAAI,CAACI,KAAK,CAACD,KAAK;MACvBE,OAAO,EAAEL,IAAI,CAACI,KAAK,CAACC;KACrB;IAED,IAAI,CAACP,WAAW,CAACQ,IAAI,CAACJ,IAAI,CAAC;EAC7B;;AAfWR,mBAAmB,C;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB,C;QAAnBA,mBAAmB;EAAAa,SAAA;EAAAC,OAAA;IAAAV,WAAA;EAAA;EAAAW,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCVhCxB,EAAA,CAAAC,cAAA,eAAU;MAEFD,EAAA,CAAA0B,UAAA,oBAAAC,oDAAA;QAAA3B,EAAA,CAAA4B,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAA9B,EAAA,CAAA+B,WAAA;QAAA,OAAU/B,EAAA,CAAAgC,WAAA,CAAAP,GAAA,CAAAhB,SAAA,CAAAqB,GAAA,CAAmB;MAAA,EAAC;MAElC9B,EAAA,CAAAC,cAAA,qBAAgB;MACdD,EAAA,CAAAiC,SAAA,kBAAyF;MACzFjC,EAAA,CAAAkC,UAAA,IAAAC,wCAAA,uBAAwE;MAC1EnC,EAAA,CAAAG,YAAA,EAAiB;MAEjBH,EAAA,CAAAC,cAAA,qBAAgB;MACdD,EAAA,CAAAiC,SAAA,kBAAuE;MAEzEjC,EAAA,CAAAG,YAAA,EAAiB;MAEjBH,EAAA,CAAAC,cAAA,iBAAwD;MAAAD,EAAA,CAAAE,MAAA,iBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;;MAR5DH,EAAA,CAAAoC,SAAA,GAAmB;MAAnBpC,EAAA,CAAAqC,UAAA,SAAAC,GAAA,CAAA3B,OAAA,CAAmB;;;;;;SDIxBP,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}