{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../posts.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nfunction PostCreateComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter a post title.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter a post title.\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass PostCreateComponent {\n  constructor(postsService, route) {\n    this.postsService = postsService;\n    this.route = route;\n    this.enteredTitle = \"\";\n    this.enteredContent = \"\";\n    this.mode = \"create\";\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(paramMap => {\n      if (paramMap.has(\"postId\")) {\n        this.mode = \"edit\";\n        this.postId = paramMap.get(\"postId\");\n        this.post = this.postsService.getPost(this.postId);\n      } else {\n        this.mode = \"create\";\n        this.postId = null;\n      }\n    });\n  }\n  onSavePost(form) {\n    if (form.invalid) {\n      return;\n    }\n    if (this.mode === \"create\") {\n      this.postsService.addPost(form.value.title, form.value.content);\n    } else {\n      this.postsService.updatePost(this.postId, form.value.title, form.value.content);\n    }\n    form.resetForm();\n  }\n}\nPostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n  return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.PostsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nPostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostCreateComponent,\n  selectors: [[\"app-post-create\"]],\n  decls: 13,\n  vars: 4,\n  consts: [[3, \"submit\"], [\"postForm\", \"ngForm\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"title\", \"required\", \"\", \"minlength\", \"3\", \"placeholder\", \"Post Title\", 3, \"ngModel\"], [\"title\", \"ngModel\"], [4, \"ngIf\"], [\"matInput\", \"\", \"rows\", \"4\", \"name\", \"content\", \"required\", \"\", \"placeholder\", \"Post Content\", 3, \"ngModel\"], [\"content\", \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"submit\"]],\n  template: function PostCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function PostCreateComponent_Template_form_submit_1_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onSavePost(_r0));\n      });\n      i0.ɵɵelementStart(3, \"mat-form-field\");\n      i0.ɵɵelement(4, \"input\", 2, 3);\n      i0.ɵɵtemplate(6, PostCreateComponent_mat_error_6_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\");\n      i0.ɵɵelement(8, \"textarea\", 5, 6);\n      i0.ɵɵtemplate(10, PostCreateComponent_mat_error_10_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵtext(12, \"Save Post\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(5);\n      const _r3 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.post.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.post.content);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm, i5.MatInput, i6.MatFormField, i6.MatError, i7.MatCard, i8.MatButton],\n  styles: [\"mat-form-field[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCxcbnRleHRhcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { PostCreateComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PostCreateComponent","constructor","postsService","route","enteredTitle","enteredContent","mode","ngOnInit","paramMap","subscribe","has","postId","get","post","getPost","onSavePost","form","invalid","addPost","value","title","content","updatePost","resetForm","ɵɵdirectiveInject","i1","PostsService","i2","ActivatedRoute","selectors","decls","vars","consts","template","PostCreateComponent_Template","rf","ctx","ɵɵlistener","PostCreateComponent_Template_form_submit_1_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","PostCreateComponent_mat_error_6_Template","PostCreateComponent_mat_error_10_Template","ɵɵadvance","ɵɵproperty","_r1","_r3"],"sources":["C:\\Users\\Saurab Dhir\\Documents\\Web Dev Udemy Course\\Angular Course\\mean-course\\src\\app\\posts\\post-create\\post-create.component.ts","C:\\Users\\Saurab Dhir\\Documents\\Web Dev Udemy Course\\Angular Course\\mean-course\\src\\app\\posts\\post-create\\post-create.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\n\nimport { PostsService } from \"../posts.service\";\nimport { Post } from \"../post.model\";\n\n@Component({\n  selector: \"app-post-create\",\n  templateUrl: \"./post-create.component.html\",\n  styleUrls: [\"./post-create.component.css\"]\n})\nexport class PostCreateComponent implements OnInit {\n  enteredTitle = \"\";\n  enteredContent = \"\";\n  post: Post;\n  private mode = \"create\";\n  private postId: string;\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"postId\")) {\n        this.mode = \"edit\";\n        this.postId = paramMap.get(\"postId\");\n        this.post = this.postsService.getPost(this.postId);\n      } else {\n        this.mode = \"create\";\n        this.postId = null;\n      }\n    });\n  }\n\n  onSavePost(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    if (this.mode === \"create\") {\n      this.postsService.addPost(form.value.title, form.value.content);\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        form.value.title,\n        form.value.content\n      );\n    }\n    form.resetForm();\n  }\n}\n","<mat-card>\n  <form (submit)=\"onSavePost(postForm)\" #postForm=\"ngForm\">\n    <mat-form-field>\n      <input\n        matInput\n        type=\"text\"\n        name=\"title\"\n        [ngModel]=\"post.title\"\n        required\n        minlength=\"3\"\n        placeholder=\"Post Title\"\n        #title=\"ngModel\">\n      <mat-error *ngIf=\"title.invalid\">Please enter a post title.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <textarea\n        matInput\n        rows=\"4\"\n        name=\"content\"\n        [ngModel]=\"post.content\"\n        required\n        placeholder=\"Post Content\"\n        #content=\"ngModel\"></textarea>\n      <mat-error *ngIf=\"content.invalid\">Please enter a post title.</mat-error>\n    </mat-form-field>\n    <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\">Save Post</button>\n  </form>\n</mat-card>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}