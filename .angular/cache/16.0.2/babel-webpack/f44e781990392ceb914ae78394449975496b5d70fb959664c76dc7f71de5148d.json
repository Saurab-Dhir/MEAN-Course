{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../posts.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nfunction PostCreateComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter a post title.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter a post title.\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass PostCreateComponent {\n  constructor(postServices, route) {\n    this.postServices = postServices;\n    this.route = route;\n    this.enteredTitle = '';\n    this.enteredContent = '';\n    this.mode = 'create';\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(paramMap => {\n      if (paramMap.has('postId')) {\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        this.post = this.postServices.getPost(this.postId);\n      } else {\n        this.mode = 'create';\n        this.postId = null;\n      }\n    });\n  }\n  onAddPost(form) {\n    if (form.invalid) {\n      return;\n    }\n    this.postServices.addPost(form.value.title, form.value.content);\n    form.resetForm();\n  }\n}\nPostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n  return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nPostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostCreateComponent,\n  selectors: [[\"app-post-create\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[3, \"submit\"], [\"postForm\", \"ngForm\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"title\", \"ngModel\", \"\", \"require\", \"\", \"minlength\", \"3\", \"placeholder\", \"Post Title*\"], [\"title\", \"ngModel\"], [4, \"ngIf\"], [\"matInput\", \"\", \"rows\", \"4\", \"name\", \"content\", \"ngModel\", \"\", \"required\", \"\", \"placeholder\", \"Post Content*\"], [\"content\", \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n  template: function PostCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function PostCreateComponent_Template_form_submit_1_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onAddPost(_r0));\n      });\n      i0.ɵɵelementStart(3, \"mat-form-field\");\n      i0.ɵɵelement(4, \"input\", 2, 3);\n      i0.ɵɵtemplate(6, PostCreateComponent_mat_error_6_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\");\n      i0.ɵɵelement(8, \"textarea\", 5, 6);\n      i0.ɵɵtemplate(10, PostCreateComponent_mat_error_10_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵtext(12, \"Save Post\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(5);\n      const _r3 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm, i5.MatInput, i6.MatFormField, i6.MatError, i7.MatCard, i8.MatButton],\n  styles: [\"textarea[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7QUFDYiIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxubWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { PostCreateComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PostCreateComponent","constructor","postServices","route","enteredTitle","enteredContent","mode","ngOnInit","paramMap","subscribe","has","postId","get","post","getPost","onAddPost","form","invalid","addPost","value","title","content","resetForm","ɵɵdirectiveInject","i1","PostService","i2","ActivatedRoute","selectors","decls","vars","consts","template","PostCreateComponent_Template","rf","ctx","ɵɵlistener","PostCreateComponent_Template_form_submit_1_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","PostCreateComponent_mat_error_6_Template","PostCreateComponent_mat_error_10_Template","ɵɵadvance","ɵɵproperty","_r1","_r3"],"sources":["C:\\Users\\Saurab Dhir\\Documents\\Web Dev Udemy Course\\Angular Course\\mean-course\\src\\app\\posts\\post-create\\post-create.component.ts","C:\\Users\\Saurab Dhir\\Documents\\Web Dev Udemy Course\\Angular Course\\mean-course\\src\\app\\posts\\post-create\\post-create.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { Post } from \"../post.model\";\r\nimport {NgForm} from \"@angular/forms\"\r\nimport { PostService } from \"../posts.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-post-create',   // helps us to use the component below, this is our own HTML tag\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\n\r\nexport class PostCreateComponent implements OnInit {\r\n  enteredTitle='';\r\n  enteredContent='';\r\n  private mode = 'create';\r\n  private postId: string;\r\n  private post: Post;\r\n\r\n  constructor(public postServices: PostService, public route: ActivatedRoute){}\r\n\r\n  ngOnInit() {\r\n      this.route.paramMap.subscribe((paramMap: ParamMap) =>{    // observable that we can subscribe to\r\n        if(paramMap.has('postId')) {\r\n          this.mode = 'edit';\r\n          this.postId = paramMap.get('postId');\r\n          this.post = this.postServices.getPost(this.postId)\r\n        }\r\n        else{\r\n          this.mode = 'create'\r\n          this.postId = null;\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n  onAddPost(form: NgForm){                          //form is of type NgForm\r\n    if(form.invalid){\r\n      return\r\n    }\r\n    this.postServices .addPost(form.value.title, form.value.content);\r\n    form.resetForm();\r\n  }\r\n}\r\n","<mat-card>\r\n  <form (submit)=\"onAddPost(postForm)\" #postForm=\"ngForm\">\r\n    <mat-form-field>\r\n      <input matInput type=\"text\" name=\"title\" ngModel require minlength=\"3\" placeholder=\"Post Title*\" #title=\"ngModel\">\r\n      <mat-error *ngIf=\"title.invalid\">Please enter a post title.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <textarea matInput rows=\"4\" name=\"content\" ngModel required placeholder=\"Post Content*\" #content=\"ngModel\"></textarea>\r\n      <mat-error *ngIf=\"content.invalid\">Please enter a post title.</mat-error>\r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"primary\" type=\"submit\">Save Post</button>\r\n  </form>\r\n</mat-card>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}