{"ast":null,"code":"import { Subject } from 'rxjs'; // read on rxjs\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass PostService {\n  constructor(http) {\n    this.http = http;\n    this.posts = [];\n    this.postsUpdated = new Subject();\n  }\n  getPosts() {\n    this.http.get('http://localhost:3000/api/posts').subscribe(postData => {\n      this.posts = postData.posts;\n      this.postsUpdated.next([...this.posts]);\n    });\n  }\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n  addPost(title, content) {\n    const post = {\n      id: null,\n      title: title,\n      content: content\n    };\n    this.posts.push(post);\n    this.postsUpdated.next([...this.posts]);\n  }\n}\nPostService.ɵfac = function PostService_Factory(t) {\n  return new (t || PostService)(i0.ɵɵinject(i1.HttpClient));\n};\nPostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostService,\n  factory: PostService.ɵfac,\n  providedIn: 'root'\n});\nexport { PostService };","map":{"version":3,"names":["Subject","PostService","constructor","http","posts","postsUpdated","getPosts","get","subscribe","postData","next","getPostUpdateListener","asObservable","addPost","title","content","post","id","push","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Saurab Dhir\\Documents\\Web Dev Udemy Course\\Angular Course\\mean-course\\src\\app\\posts\\posts.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Subject } from 'rxjs'  // read on rxjs\r\nimport { Post } from \"./post.model\";\r\nimport {HttpClient} from '@angular/common/http'\r\n\r\n@Injectable({providedIn:'root'})\r\n\r\nexport class PostService {\r\n  private posts: Post[] = [];\r\n  private postsUpdated = new Subject<Post[]>();\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  getPosts(){\r\n     this.http.get<{message: string, posts: Post[]}>('http://localhost:3000/api/posts').subscribe((postData) =>{\r\n      this.posts = postData.posts;\r\n      this.postsUpdated.next([...this.posts])\r\n     });\r\n  }\r\n\r\n  getPostUpdateListener(){\r\n    return this.postsUpdated.asObservable();\r\n  }\r\n\r\n  addPost(title: string, content: string) {\r\n     const post: Post = { id:null, title: title, content: content }\r\n     this.posts.push(post);\r\n     this.postsUpdated.next([...this.posts]);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM,EAAE;;;AAIhC,MAEaC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,YAAY,GAAG,IAAIL,OAAO,EAAU;EAI5C;EAEAM,QAAQA,CAAA;IACL,IAAI,CAACH,IAAI,CAACI,GAAG,CAAmC,iCAAiC,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAI;MACzG,IAAI,CAACL,KAAK,GAAGK,QAAQ,CAACL,KAAK;MAC3B,IAAI,CAACC,YAAY,CAACK,IAAI,CAAC,CAAC,GAAG,IAAI,CAACN,KAAK,CAAC,CAAC;IACxC,CAAC,CAAC;EACL;EAEAO,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACN,YAAY,CAACO,YAAY,EAAE;EACzC;EAEAC,OAAOA,CAACC,KAAa,EAAEC,OAAe;IACnC,MAAMC,IAAI,GAAS;MAAEC,EAAE,EAAC,IAAI;MAAEH,KAAK,EAAEA,KAAK;MAAEC,OAAO,EAAEA;IAAO,CAAE;IAC9D,IAAI,CAACX,KAAK,CAACc,IAAI,CAACF,IAAI,CAAC;IACrB,IAAI,CAACX,YAAY,CAACK,IAAI,CAAC,CAAC,GAAG,IAAI,CAACN,KAAK,CAAC,CAAC;EAC1C;;AAvBWH,WAAW,C;mBAAXA,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXrB,WAAW,C;SAAXA,WAAW;EAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;EAAAC,UAAA,EAFA;AAAM;SAEjBxB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}